name: CD-stage

on:
  push:
    branches: [ DEVOP/1 ]

jobs:
  build-and-push-stage:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push bot-service (stage)
        uses: docker/build-push-action@v6
        with:
          context: ./backend/bot-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bot-service-stage:latest

      - name: Build and push api-gateway (stage)
        uses: docker/build-push-action@v6
        with:
          context: ./backend/API-gateway
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway-stage:latest

      - name: Build and push profile-service (stage)
        uses: docker/build-push-action@v6
        with:
          context: ./backend/profile-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/profile-service-stage:latest

      - name: Build and push mini-app (stage)
        uses: docker/build-push-action@v6
        with:
          context: ./mini-app
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mini-app-stage:latest

      - name: Build and push ml (stage)
        uses: docker/build-push-action@v6
        with:
          context: ./ml
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ml-stage:latest 

      - name: Restart services on stage server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGE_HOST }}
          username: ${{ secrets.STAGE_USER }}
          port: ${{ secrets.STAGE_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/stage
            docker compose up -d