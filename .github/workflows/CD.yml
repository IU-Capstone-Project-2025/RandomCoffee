name: CD

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - '.gitignore'

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Check for changes
        id: check_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            bot-service:
              - 'backend/bot-service/**'
            api-gateway:
              - 'backend/API-gateway/**'
            profile-service:
              - 'backend/profile-service/**'
            mini-app:
              - 'mini-app/**'
            ml:
              - 'ml/**'

      - name: Build and push bot-service
        if: steps.check_changes.outputs.bot-service == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./backend/bot-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/bot-service:latest

      - name: Build and push api-gateway
        if: steps.check_changes.outputs.api-gateway == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./backend/API-gateway
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest

      - name: Build and push profile-service
        if: steps.check_changes.outputs.profile-service == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./backend/profile-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/profile-service:latest

      - name: Build and push mini-app
        if: steps.check_changes.outputs.mini-app == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./mini-app
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/mini-app:latest

      - name: Build and push ml
        if: steps.check_changes.outputs.ml == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./ml
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ml:latest

      - name: Restart services on production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          port: ${{ secrets.PROD_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/prod
            docker compose up -d