name: CI

on:
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check for changes
        id: check_changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            bot-service:
              - 'backend/bot-service/**'
            api-gateway:
              - 'backend/API-gateway/**'
            profile-service:
              - 'backend/profile-service/**'
            mini-app:
              - 'mini-app/**'
            ml:
              - 'ml/**'

      - name: Create .env file
        run: |
          cat > .env << EOF
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          EOF

      - name: Build and start containers
        run: |
          # Build and start only services with changes or their dependencies
          if [[ "${{ steps.check_changes.outputs.profile-service }}" == "true" || "${{ steps.check_changes.outputs.bot-service }}" == "true" || "${{ steps.check_changes.outputs.api-gateway }}" == "true" || "${{ steps.check_changes.outputs.mini-app }}" == "true" || "${{ steps.check_changes.outputs.ml }}" == "true" ]]; then
            docker compose -f compose-dev.yaml up -d --build
          else
            echo "No changes detected in any service, skipping build and tests"
            exit 0
          fi

      - name: Wait for containers to be up and running
        if: steps.check_changes.outputs.profile-service == 'true' || steps.check_changes.outputs.bot-service == 'true' || steps.check_changes.outputs.api-gateway == 'true' || steps.check_changes.outputs.mini-app == 'true' || steps.check_changes.outputs.ml == 'true'
        run: |
          echo "Waiting for containers to start..."
          sleep 30

      - name: Show container logs
        if: steps.check_changes.outputs.profile-service == 'true' || steps.check_changes.outputs.bot-service == 'true' || steps.check_changes.outputs.api-gateway == 'true' || steps.check_changes.outputs.mini-app == 'true' || steps.check_changes.outputs.ml == 'true'
        run: |
          docker compose -f compose-dev.yaml ps -a

          echo "=== Bot Service Logs ==="
          docker logs bot-service

          echo "=== API Gateway Logs ==="
          docker logs api-gateway

          echo "=== Profile Service Logs ==="
          docker logs profile-service

          echo "=== Profile DB Logs ==="
          docker logs profile-db

          echo "=== Mini App Logs ==="
          docker logs mini-app

          echo "=== ML Service Logs ==="
          docker logs ml

      - name: Perform validations on all containers
        if: steps.check_changes.outputs.profile-service == 'true' || steps.check_changes.outputs.bot-service == 'true' || steps.check_changes.outputs.api-gateway == 'true' || steps.check_changes.outputs.mini-app == 'true' || steps.check_changes.outputs.ml == 'true'
        run: |
          if ! docker ps -a | grep -q "mini-app"; then
            echo "Error: mini-app container is not running"
            exit 1
          fi

          if ! docker port mini-app | grep -q ":"; then
            echo "Error: No ports are exposed on mini-app container"
            exit 1
          fi

          if ! docker port api-gateway | grep -q ":"; then
            echo "Error: No ports are exposed on api-gateway container"
            exit 1
          fi

          if ! docker port ml | grep -q ":"; then
            echo "Error: No ports are exposed on ml container"
            exit 1
          fi

          if docker compose -f compose-dev.yaml ps -a | grep -q "Exited ([1-9][0-9]*\|[2-9])"; then
            echo "Error: Some containers exited with non-zero status"
            exit 1
          fi